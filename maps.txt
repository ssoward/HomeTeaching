<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  <meta http-equiv="Content-Style-Type" content="text/css">
  <title>Google Maps JavaScript API Example</title>
  <meta name="Generator" content="Cocoa HTML Writer">
  <meta name="CocoaVersion" content="824.42">
  <style type="text/css">
    p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica}
    p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 12.0px Helvetica; min-height: 14.0px}
    span.Apple-tab-span {white-space:pre}
  </style>
</head>
<body>
<p class="p1">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"</p>
<p class="p1"><span class="Apple-converted-space">    </span>"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;</p>
<p class="p1">&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;</p>
<p class="p1"><span class="Apple-converted-space">  </span>&lt;head&gt;</p>
<p class="p1"><span class="Apple-converted-space">    </span>&lt;meta http-equiv="content-type" content="text/html; charset=utf-8"/&gt;</p>
<p class="p1"><span class="Apple-converted-space">    </span>&lt;title&gt;Google Maps JavaScript API Example: Complex Icon&lt;/title&gt;</p>
<p class="p1"><span class="Apple-converted-space">    </span>&lt;script src="http://maps.google.com/maps?file=api&amp;amp;v=2"</p>
<p class="p1"><span class="Apple-converted-space">            </span>type="text/javascript"&gt;&lt;/script&gt;</p>
<p class="p1"><span class="Apple-converted-space">    </span>&lt;script type="text/javascript"&gt;</p>
<p class="p2"><br></p>
<p class="p1"><span class="Apple-converted-space">    </span>function initialize() {</p>
<p class="p1"><span class="Apple-converted-space">      </span>if (GBrowserIsCompatible()) {</p>
<p class="p1"><span class="Apple-converted-space">        </span>var map = new GMap2(document.getElementById("map_canvas"));</p>
<p class="p1"><span class="Apple-converted-space">        </span>map.setCenter(new GLatLng(37.4419, -122.1419), 13);</p>
<p class="p1"><span class="Apple-converted-space">        </span>map.addControl(new GSmallMapControl());</p>
<p class="p1"><span class="Apple-converted-space">        </span>map.addControl(new GMapTypeControl());</p>
<p class="p2"><br></p>
<p class="p1"><span class="Apple-converted-space">        </span>// Create our "tiny" marker icon</p>
<p class="p1"><span class="Apple-converted-space">  <span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></span>var tinyIcon = new GIcon();</p>
<p class="p1"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>tinyIcon.image = "http://labs.google.com/ridefinder/images/mm_20_red.png";</p>
<p class="p1"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>tinyIcon.shadow = "http://labs.google.com/ridefinder/images/mm_20_shadow.png";</p>
<p class="p1"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>tinyIcon.iconSize = new GSize(12, 20);</p>
<p class="p1"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>tinyIcon.shadowSize = new GSize(22, 20);</p>
<p class="p1"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>tinyIcon.iconAnchor = new GPoint(6, 20);</p>
<p class="p1"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>tinyIcon.infoWindowAnchor = new GPoint(5, 1);</p>
<p class="p2"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span></p>
<p class="p1"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>// Set up our GMarkerOptions object</p>
<p class="p1"><span class="Apple-tab-span">	</span><span class="Apple-tab-span">	</span>markerOptions = { icon:tinyIcon };</p>
<p class="p2"><br></p>
<p class="p1"><span class="Apple-converted-space">        </span>// Add 10 markers to the map at random locations</p>
<p class="p1"><span class="Apple-converted-space">        </span>var bounds = map.getBounds();</p>
<p class="p1"><span class="Apple-converted-space">        </span>var southWest = bounds.getSouthWest();</p>
<p class="p1"><span class="Apple-converted-space">        </span>var northEast = bounds.getNorthEast();</p>
<p class="p1"><span class="Apple-converted-space">        </span>var lngSpan = northEast.lng() - southWest.lng();</p>
<p class="p1"><span class="Apple-converted-space">        </span>var latSpan = northEast.lat() - southWest.lat();</p>
<p class="p1"><span class="Apple-converted-space">        </span>for (var i = 0; i &lt; 10; i++) {</p>
<p class="p1"><span class="Apple-converted-space">          </span>var point = new GLatLng(southWest.lat() + latSpan * Math.random(),</p>
<p class="p1"><span class="Apple-converted-space">                                  </span>southWest.lng() + lngSpan * Math.random());</p>
<p class="p1"><span class="Apple-converted-space">          </span>map.addOverlay(new GMarker(point, markerOptions));</p>
<p class="p1"><span class="Apple-converted-space">        </span>}</p>
<p class="p1"><span class="Apple-converted-space">      </span>}</p>
<p class="p1"><span class="Apple-converted-space">    </span>}</p>
<p class="p2"><br></p>
<p class="p1"><span class="Apple-converted-space">    </span>&lt;/script&gt;</p>
<p class="p1"><span class="Apple-converted-space">  </span>&lt;/head&gt;</p>
<p class="p2"><br></p>
<p class="p1"><span class="Apple-converted-space">  </span>&lt;body onload="initialize()" onunload="GUnload()"&gt;</p>
<p class="p1"><span class="Apple-converted-space">    </span>&lt;div id="map_canvas" style="width: 500px; height: 300px"&gt;&lt;/div&gt;</p>
<p class="p1"><span class="Apple-converted-space">  </span>&lt;/body&gt;</p>
<p class="p1">&lt;/html&gt;</p>
</body>
</html>
